[buildout]
develop =
    .
parts =
    project-directories
    numpy-install
    python
eggs =
    coverage==3.5.2
    gevent==0.13.7
    pyon

unzip = true

# extends = versions.cfg
versions = versions

# Using our server instead of Pypi for indexing when Pypi goes wrong
# index = http://sddevrepo.oceanobservatories.org/releases/

# When set to false, buildout and its recipe versions must be
# explicitly pinned down and defined.
allow-picked-versions = true

# Useful line to print out the buildout versions you are using
extensions = buildout-versions

# Tells buildout where to download packages in addition to Pypi.
find-links =
    http://sddevrepo.oceanobservatories.org/releases/

# Use this section only if you want to override the
# versions in the parent file.
[versions]
setuptools=0.6c11

###
#
# set up the directory structure
#
[project-directories]
recipe = z3c.recipe.mkdir
paths =
    logs

[numpy-src]
recipe = hexagonit.recipe.download
url = http://pypi.python.org/packages/source/n/numpy/numpy-1.6.2.tar.gz#md5=95ed6c9dcc94af1fc1642ea2a33c1bba
ignore-existing = true

[numpy-install]
recipe = z3c.recipe.egg:setup
setup = ${numpy-src:location}/numpy-1.6.2
args =
    clean
    build
    install

[gcoverage_patch]
recipe =
    zc.recipe.egg
eggs =
    coverage==3.5.2pl1
    gevent==0.13.7.1
find-links =
    https://github.com/newbrough/coverage/tarball/master#egg=coverage-3.5.2pl1
    https://github.com/newbrough/gevent-0.13.7/tarball/master#egg=gevent-0.13.7.1

[python]
recipe = zc.recipe.egg
interpreter = python
scripts =
    nosetests
    pycc
    pyccd
    control_cc
    generate_interfaces
    store_interfaces
    ipython
    manhole
    json_report
    clear_couch
entry-points =
    ipython=scripts.ipython:main
    nosetests=nose:run_exit
    pyccd=scripts.pyccd:start_debugging
    manhole=scripts.manhole:main
eggs =
    ${buildout:eggs}

[unittest]
recipe = iw.recipe.cmd:py
on_install = true
on_update = true
cmds=
  import os
  input = open(os.path.join(buildout.get('directory', '.'), 'unittest'))
  bin_dir = buildout.get('bin-directory', 'bin')
  output_file = os.path.join(bin_dir, 'unittest')
  output = open(output_file, 'w')
  [output.write(s.replace('python', os.path.join(bin_dir, 'python'))) for s in input.xreadlines()]
  output.close()
  input.close()
  os.system('chmod +x %s' % output_file)
